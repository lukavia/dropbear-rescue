#!/bin/sh
set -e


showpubkey() {
    local keyfile="$1" pubkey

    if ! which ssh-keygen >/dev/null 2>&1; then
        cat
    else
        pubkey=$(mktemp)
        grep -m1 -E '^(ssh-(dss|rsa)|ecdsa-sha2-nistp(256|384|521)) ' >"$pubkey"
        ssh-keygen -v -lf "$pubkey" | sed -r "1s@$pubkey(\s+\([^)]+\))\$@$keyfile\1@"
        rm -f "$pubkey"
    fi
}

if [ "$1" = 'configure' ]; then
    havehostkey=no
    for keytype in dss rsa ecdsa; do
        keyfile="/etc/dropbear-rescue/dropbear_${keytype}_host_key"
        if [ -e "$keyfile" ]; then
            havehostkey=yes
            break
        fi
    done
    if [ "$havehostkey" = no ]; then
        # generate host keys
        for keytype in dss rsa ecdsa; do
            keyfile="/etc/dropbear-rescue/dropbear_${keytype}_host_key"
            echo "Generating Dropbear Rescue $(echo "$keytype" | tr '[a-z]' '[A-Z]') host key.  Please wait." >&2
            dropbearkey -t "$keytype" -f "$keyfile" | showpubkey "$keyfile"
        done
    fi

    # XXX here we could read the configured network-config, and use it
    # for default values for prompting the user for the
    # initramfs-network- config (subsequently writing it to menu.lst:#
    # kopt= or lilo.conf), instead of just printing the reminder below.
    update-initramfs -u
    if ! grep -Eq '^(.*\s)?ip=' /proc/cmdline; then
        cat <<-EOT
			Dropbear has been added to the initramfs. Don't forget to check
			your "ip=" kernel bootparameter to match your desired initramfs
			ip configuration.

		EOT
    fi
fi

#DEBHELPER#
exit 0
